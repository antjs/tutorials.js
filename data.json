{"list":[{"steps":[{"note":"<h3 id=\"-tutorials-js\">关于 tutorials.js</h3>\n\n`Tutorials.js` 是用来展示和编写 `Javascript` + `HTML` 类在线教程的工具.\n\n使用 tutorial.js 你可以快速的制作和 http://justan.github.io/tutorials.js, http://learn.ractivejs.org/ 及 http://learn.knockoutjs.com/  类似的一个在线互动教程.\n\n<button class='btn btn-info' id='intro'>界面介绍</button>\n\n","init":"tutor.off('click #intro')\ntutor.on('click #intro', function() {\n  $('body').off('click.intro');\n  setTimeout(function(){\n    $('body').on('click.intro', function(e) {intro && (!$(e.target).parents('.introjs-tooltip').length) && intro.exit()})\n  },0);\n  var intro = introJs();\n  intro.setOptions({\n    steps:[\n      {\n        element: $('.html .CodeMirror')[0],\n        intro: '这里是 HTML 模板区. 可以自由编辑 HTML 模板内容. 在该区域还支持 zen coding 快速编写哦!'\n      },\n      {\n        element: $('.javascript .CodeMirror')[0],\n        intro: '这里是 Javascript 代码区. 变量 html 代表 HTML 区的 DOM 元素.'\n      },\n      {\n        element: $('.javascript .exe')[0],\n        intro: '点击该按钮将会执行 HTML 区及 JS 区的内容, 并将其显示到内容预览区.'\n      },\n      {\n        element: $('.console .CodeMirror')[0],\n        intro: '这里是 Javascript 控制台区. 可以输入一些 js 代码来与上面的代码做些交互'\n      },\n      {\n        element: $('.console .exe')[0],\n        intro: '在控制台区写些代码, 然后点击该按钮, 看看执行的情况.'\n      },\n      {\n        element: $('#reset')[0],\n        intro: '修改了代码之后. 点击该按钮将会恢复教程原来的代码.'\n      },\n      {\n        element: $('.output')[0],\n        intro: '代码的运行后, HTML 内容将展现在这里.'\n      }\n    ]\n  });\n  intro.start();\n})","html":" ","javascript":" ","console":" "},{"note":"### 界面介绍\n\nTutorials.js 的普通教程界面共有 5 各区域:\n\n1. 左上是教程内容区, 主要用于显示教程的主体文本区域\n2. 左下是内容预览区, 用于展示 HTML 区域与 JS 区域的运行结果\n3. 右上是 <code>HTML</code> 区域, 用户互动的 HTML 将显示在那里\n4. 右中是 <code>Javascript</code> 区域, 用于放置可执行可互动的 javascript 代码\n5. 右下是 JS 控制台区域, 对于额外的 JS 代码可以放在那里\n\n```\ngit clone https://github.com/justan/tutorials.js.git\n```\n\n开始你的教程制作之旅吧","html":"<p>这里是 HTML 区域, 你教程的 HTML 内容可以写在这里</p>","javascript":"//这里是 JS 区, `html` 变量指代上面HTML区域的 DOM 元素\n//点击边上的执行代码按钮, 将执行 HTML 区域及 JS 区域的内容\nalert(html.innerHTML)","console":"//这里是 JS 控制台, 在这里可以执行 js 片段. 将会和上面的 JS 区有同样的作用域."}],"title":"Hello, tutorial.js！"},{"steps":[{"note":"### 所见即所得\n\n有了教程展示模板, 编写教程内容来适应这个模板似乎也是个问题.\n\n好在 `tutorial.js` 同时也自带了编辑模式, 使得你可以在同一界面下编写教程内容!\n\n在编辑模式下\n\n- 你可以使用 `markdown` 或 `html` 来编写教程主体内容\n- 在 `HTML, JS, console` 区编写该区域的展示内容及补全展示内容","html":"<p>这里是 HTML 区域, 你教程的 HTML 内容可以写在这里</p>","javascript":"//这里是 JS 区, `html` 变量指代上面HTML区域的 DOM 元素\n//点击边上的执行代码按钮, 将执行 HTML 区域及 JS 区域的内容\nalert(html.innerHTML)","console":"//这里是 JS 控制台, 在这里可以执行 js 片段. 将会和上面的 JS 区有同样的作用域."},{"note":"### 开启编辑模式\n\n在地址栏的 `#2/2` 后面输入 [`?write=true`][0] 即可进入编辑模式!\n\n在编辑模式里所有在文本框中输入的内容都可以点击右上的保存按钮保存到 [`localStorage`][1] 中.\n\n[0]: #2/2?write=true\n[1]: javascript:alert('你的教程内容:'+localStorage.tutorials)","html":"<p>这里是 HTML 区域, 你教程的 HTML 内容可以写在这里</p>","javascript":" ","console":"//这里是 JS 控制台, 在这里可以执行 js 片段. 将会和上面的 JS 区有同样的作用域."},{"note":"### 保存教程内容\n\n当你的教程编写完毕, 准备发布的时候. 你需要将教程内容保存到 `tutorials.js` 根目录的 `data.json` 当中.\n\n[完]","html":" ","javascript":" ","console":"//这里是 JS 控制台, 在这里可以执行 js 片段. 将会和上面的 JS 区有同样的作用域."}],"title":"编辑模式"}],"title":"Tutorial.js 使用教程"}