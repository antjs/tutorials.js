[{"steps":[{"noteMarked":"### 关于 tutorials.js\n`Tutorials.js` 是用来展示和编写 `Javascript` + `HTML` 类在线教程的工具.\n\n使用 tutorial.js 你可以快速的只在和[本教程][0], http://learn.ractivejs.org/ 及 http://learn.knockoutjs.com/  类似的一个在线互动教程.\n\n\n[0]: http://justan.github.io/tutorials.js","note":"<h3>关于 tutorials.js</h3>\n<p><code>Tutorials.js</code> 是用来展示和编写 <code>Javascript</code> + <code>HTML</code> 类在线教程的工具.</p>\n<p>使用 tutorial.js 你可以快速的只在和<a href=\"http://justan.github.io/tutorials.js\">本教程</a>, <a href=\"http://learn.ractivejs.org/\">http://learn.ractivejs.org/</a> 及 <a href=\"http://learn.knockoutjs.com/\">http://learn.knockoutjs.com/</a>  类似的一个在线互动教程.</p>\n","html":" ","javascript":" ","console":" ","autorun":false},{"noteMarked":"### 界面介绍\nTutorials.js 的普通教程界面共有 5 各区域:\n\n1. 左上是教程内容区, 主要用于显示教程的主体文本区域\n2. 左下是内容预览区, 用于展示 HTML 区域与 JS 区域的运行结果\n3. 右上是 `HTML` 区域, 用户互动的 HTML 将显示在那里\n4. 右中是 `Javascript` 区域, 用于放置可执行可互动的 javascript 代码\n5. 右下是 JS 控制台区域, 对于额外的 JS 代码可以放在那里\n","note":"<h3>界面介绍</h3>\n<p>Tutorials.js 的普通教程界面共有 5 各区域:</p>\n<ol>\n<li>左上是教程内容区, 主要用于显示教程的主体文本区域</li>\n<li>左下是内容预览区, 用于展示 HTML 区域与 JS 区域的运行结果</li>\n<li>右上是 <code>HTML</code> 区域, 用户互动的 HTML 将显示在那里</li>\n<li>右中是 <code>Javascript</code> 区域, 用于放置可执行可互动的 javascript 代码</li>\n<li>右下是 JS 控制台区域, 对于额外的 JS 代码可以放在那里</li>\n</ol>\n","html":"<p>这里是 HTML 区域, 你教程的 HTML 内容可以写在这里</p>","javascript":"//这里是 JS 区, `html` 变量指代上面HTML区域的 DOM 元素\n//点击边上的执行代码按钮, 将执行 HTML 区域及 JS 区域的内容\nalert(html.innerHTML)","console":"//这里是 JS 控制台, 在这里可以执行 js 片段. 将会和上面的 JS 区有同样的作用域.","fixCode":{"javascript":"//补全代码呢, 我的理解就是你想教别人写些代码. 教程里都写好了, 希望用户能够自己输入进去加深印象\n//但是教程作者提前把这些写好, 让用户一点按钮就看到更新后的效果总是不错的","html":"<p>这里是 HTML 区域, 你教程的 HTML 内容可以写在这里</p>\n<!-- 还支持 zen coding 哦! -->","console":"var str = '运行控制台区的代码, 你需要先运行 JS 区的代码!';\ntry{\n  html.innerHTML = '<blink>str</blink>';\n}catch(e){\n  alert(str);\n}"}}],"title":"Hello, tutorial.js！"},{"steps":[{"noteMarked":"### 所见即所得\n\n有了教程展示模板, 编写教程内容来适应这个模板似乎也是个问题.\n\n好在 `tutorial.js` 同时也自带了编辑模式, 使得你可以在同一界面下编写教程内容!\n\n在编辑模式下\n\n- 你可以使用 `markdown` 或 `html` 来编写教程主体内容\n- 在 `HTML, JS, console` 区编写该区域的展示内容及补全展示内容","note":"<h3>所见即所得</h3>\n<p>有了教程展示模板, 编写教程内容来适应这个模板似乎也是个问题.</p>\n<p>好在 <code>tutorial.js</code> 同时也自带了编辑模式, 使得你可以在同一界面下编写教程内容!</p>\n<p>在编辑模式下</p>\n<ul>\n<li>你可以使用 <code>markdown</code> 或 <code>html</code> 来编写教程主体内容</li>\n<li>在 <code>HTML, JS, console</code> 区编写该区域的展示内容及补全展示内容</li>\n</ul>\n","html":"<p>这里是 HTML 区域, 你教程的 HTML 内容可以写在这里</p>","javascript":"//这里是 JS 区, `html` 变量指代上面HTML区域的 DOM 元素\n//点击边上的执行代码按钮, 将执行 HTML 区域及 JS 区域的内容\nalert(html.innerHTML)","console":"//这里是 JS 控制台, 在这里可以执行 js 片段. 将会和上面的 JS 区有同样的作用域."},{"noteMarked":"### 开启编辑模式\n\n在地址栏的 `#2\\2` 后面输入 [`?write=true`][0] 即可进入编辑模式!\n\n<p z-if=^writeMode>恭喜你</p>\n\n[0]: #2/2?write=true","note":"<h3>开启编辑模式</h3>\n<p>在地址栏的 <code>#2\\2</code> 后面输入 <a href=\"#2/2?write=true\"><code>?write=true</code></a> 即可进入编辑模式!</p>\n<p z-if=\"^writeMode\">恭喜你</p>\n\n","html":"<p>这里是 HTML 区域, 你教程的 HTML 内容可以写在这里</p>","javascript":"//忽略这段代码吧\ntutor._c = tutor._c || new Ant(document.getElementById('notes'), {data: tutor.data});","console":"//这里是 JS 控制台, 在这里可以执行 js 片段. 将会和上面的 JS 区有同样的作用域.","autorun":true}],"title":"编辑模式"}]